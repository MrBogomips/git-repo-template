#!/usr/bin/env bash

# Nexus commit hook 

# set this to your active development branch
#develop_branch="develop"
#current_branch="$(git rev-parse --abbrev-ref HEAD)"

# only check commit messages on main development branch
#[ "$current_branch" != "$develop_branch" ] && exit 0

# regex to validate in commit msg
commit_regex='^((build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|Publish)(\([a-zA-Z0-9 /_,.-]+?\))?: .{1,59}\w (\((([A-Z]+-)*[0-9]+,)*(([A-Z]+-)*[0-9]+)+\)|\[skip ci\]|\[ci\])|Merge branch .+|(fixup|squash)! .+|WIP: .+)$'

error_msg='
.git/hooks/commit-msg: Aborting commit, try again with a valid message.

USAGE
The commit message MUST honour one of the following patterns:
* a conventional commit message subject (to be parsed into changelogs, see https://www.conventionalcommits.org/en/v1.0.0 ):
   - a change type, either of "build", "chore", "ci", "docs", "feat", "fix", "perf", "refactor", "revert", "style", "test" or "Publish"
   - optionally, in parenthesis, subsystem(s) affected by the change (comma delimited list)
   - a colon, space (": ") and a brief subject (60 characters maximum) not ending with a period
   - a space and in parenthesis, a csv of JIRA issue id " (NEXUS-123)" OR " (NEXUS-123,NEXUS-456)"... or the tags "[skip ci]" or "[ci]" (do we use these?)
* ... or, a Git autosquash line, i.e. "fixup! My previous commit" or "squash! Another previous commit" (see https://thoughtbot.com/blog/autosquashing-git-commits )
* ... or, a merge commit "Merge branch x..."
* ... or, a work-in-progress tag "WIP: "
* optionally (not validated), two line breaks and a commit message body

EXAMPLES of valid commit messages:
* feat: new button (NEXUS-1)
* feat(UI/UX): new button (NEXUS-1)
* fix(ComponentA, ComponentB): new button (NEXUS-1,NEXUS-2)
* docs: README.me improved (NEXUS-1)
* refactor: Main.cs (NEXUS-1)
* Publish: Main deploy (NEXUS-1)
* WIP: still working
* fixup! my previous commit (See note above!!!)
* squash! another previous commit (See note above!!!)
'

# This script is based by the omologous by CJ Sveningsson (carl-johan.sveningsson@scania.com), inspired by https://gist.github.com/pgilad/5d7e4db725a906bd7aa7 (Gilad Peleg)'

if ! grep -iqE "${commit_regex}" "$1"; then
    echo "${error_msg}" >&2
    exit 1
fi